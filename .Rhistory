g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(facets = .~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(facets = .~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(color=aes(drv), size=4, alpha=1/2)
g+geom_point(aes(color=drv), size=4, alpha=1/2)
g+geom_point(aes(color=drv), size=4, alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g<-ggplot(testdat, aes(myx, myy))
g+geom_line()
g+geom_line()+ylim
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))+geom_point()
g+geom_point()
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))+geom_point()+facet_grid(facets = drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method = "lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method = "lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y = "Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth= 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth= 18497/30, fill=cut)
qplot(price, data = diamonds, geom="density")
qplot(price, data = diamonds, geom="density", color=cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape=cut)
qplot(carat, price, data = diamonds, color=cut)
qplot(carat, price, data = diamonds, color=cut)+geom_smooth(method="lm")
qplot(carat, price, data = diamonds, color=cut)+geom_smooth(method="lm")+facets(facets=.~cut)
qplot(carat, price, data = diamonds, color=cut)+geom_smooth(method="lm")+facets(.~cut)
qplot(carat, price, data = diamonds, color=cut, facets = .~cut)+geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
summmary
summary(g)
g+geom_point()
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$cut, seq(0,1, length=4), na.rm = TRUE)
cutpoints<-quantile(diamonds$carat, seq(0,1, length=4), na.rm = TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(facets = cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(facets = cut ~ car2)+geom_smooth(method = "lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(. ~ cut)
library(dplyr)
library(swirl)
swirl()
cmat
0
library(swirl)
swirl()
swirl()
swirl()
cmat
plot(cx, cy, c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
points(cx, cy, c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch= 19, cex=2, col=cols1[newClust])
play()
cols1[newClust]
nxt()
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
swirl()
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u[,1]%*%svd2$v[,1]*svd1$d
a1<-svd1$u[,1]%*%svd2$v[,1]*svd1$d[1]
a1<-(svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(datasets)
str(airquality)
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative<-x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both<-intersect(site0, site1)
both
head(pm0)
cnt0<-subset(pm0, state.code==36 & county.site %in% both)
cnt0<-subset(pm0, State.Code==36 & county.site %in% both)
cnt1<-subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub<pm0sub$Sample.Value
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(c(1,2))
par(mfrow=c(1,2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch=20)
abline
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng<-range(x0sub, x1sub, na.rm=TRUE)
rng
mn0<-with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1<-with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(names(mn0), mean=mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg<-merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1999, 52), mrg[,2], rep(2012, 52), mrg[,3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
weights <- c(panacea=0.3, ichor=0.2, gold=2.0)
volumes <- c(panacea=0.025, ichor=0.015, gold=0.002)
values <- c(panacea=3000, ichor=1800, gold=2500)
sack.weight <- 25
sack.volume <- 0.25
max.items <- floor(pmin(sack.weight/weights, sack.volume/volumes))
getTotalValue <- function(n) sum(n*values)
getTotalWeight <- function(n) sum(n*weights)
getTotalVolume <- function(n) sum(n*volumes)
getTotalVolume <- function(n) sum(n*volumes)
willFitInSack <- function(n) getTotalWeight(n) <= sack.weight && getTotalVolume(n) <= sack.volume
knapsack <- expand.grid(lapply(max.items, function(n) seq.int(0, n)))
ok <- apply(knapsack, 1, willFitInSack)
knapok <- knapsack[ok,]
vals <- apply(knapok, 1, getTotalValue)
knapok[vals == max(vals),]
weights
class(weights)
names(weights)
weights <- c(panacea=0.3, ichor=0.2, gold=2.0)
str(weights)
volumes <- c(panacea=0.025, ichor=0.015, gold=0.002)
values <- c(panacea=3000, ichor=1800, gold=2500)
sack.weight <- 25
sack.volume <- 0.25
max.items <- floor(pmin(sack.weight/weights, sack.volume/volumes))
getTotalValue <- function(n) sum(n*values)
getTotalWeight <- function(n) sum(n*weights)
getTotalVolume <- function(n) sum(n*volumes)
willFitInSack <- function(n) getTotalWeight(n) <= sack.weight && getTotalVolume(n) <= sack.volume
knapsack <- expand.grid(lapply(max.items, function(n) seq.int(0, n)))
knapsack
max.items
suppressPackageStartupMessages(library(googleVis))
install.packages('googleVis')
suppressPackageStartupMessages(library(googleVis))
Fruits
M<-gvisMotionChart(Fruits, "Fruit", "Year", options = list(width=600, height=400))
plot(M)
plot(M)
M<-gvisMotionChart(Fruits, "Fruit", "Year", options = list(width=600, height=400))
plot(M)
x <-3
switch(x, 2+2, mean(1:10), rnorm(5))
<p>x <-3</p><p>switch(x, 2+2, mean(1:10), rnorm(5))</p>
x <-2
switch(2, 2+2, mean(1:10), rnorm(5))
x<-1:10 or mean(y)
mean(10)
x<-1:10
x
x<-1:10
x<-1:
10
x<-1;:10
x <-3
switch(6, 2+2, mean(1:10), rnorm(5))
y <-"fruit"
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
centre <-function(x, type){switch(type, mean=mean(x)}
centre <-function(x, type){switch(type, mean=mean(x), median=median(x), trimmed =mean(x, trim = .1))
)
centre <-function(x, type){switch(type, mean=mean(x), median=median(x), trimmed =mean(x, trim = .1))}
x <-rcauchy(10)
centre(x, "mean")
library(stats)
f <-function(){This is an empty function}
f <-function(){##This is an empty function}
f()
f <-function(){## This is an empty function}
}
f()
class(f)
f <-function(){cat("Hello, world!\n")}
f
f()
f <-function(){cat("Hello""world"!\n")}
f <-function(){cat("Hello, world!\n")}
f()
f<-function(num){for(i in seq_len(num))cat("Hello, world!\n")
}
f(3)
f<-function(num){hello <-"Hello, world!\n" for(i in seq_len(num)){cat(hello)}
f<-function(num){hello <-"Hello, world!\n" for(i in seq_len(num)){cat(hello)}
f<-function(num){hello <-"Hello, world!\n"
for(i in seq_len(num)){cat(hello)}
f<-function(num){hello <-"Hello, world!\n"</p> <p>for(i in seq_len(num)){cat(hello)}chars <-nchar(hello)* num</p> <p>chars}
f<-function(num){hello <-"Hello, world!\n" for(i in seq_len(num)){cat(hello)}chars <-nchar(hello)* num</p> <p>chars}
f<-function(num){hello <-"Hello, world!\n"
for(i in seq_len(num)){cat(hello)}chars <-nchar(hello)* num</p> <p>chars}
f<-function(num){hello <-"Hello, world!\n"
+ for(i in seq_len(num)){cat(hello)}chars <-nchar(hello)* num }
f<-function(num){hello <-"Hello, world!\n"
+ for(i in seq_len(num)){cat(hello)}chars <-nchar(hello)* num
f<-function(num){hello <-"Hello, world!\n"
for(i in seq_len(num)){cat(hello)}
chars <-nchar(hello)* num
chars}
meaningoflife <- f(3)
print(meaningoflife)
15*3
nchar
nchar("Hello, world!\n")
14*3
lm<-function(x){ x * x }
lm
search()
g <-function(x){a <-3
x+a+y}
g(2)
g <-function(x,y){a <-3
x+a+y}
y <-3
g(2,y)
x <-1:4
y <-6:9
z <- x + y
z
x <-1:4
x/y
x <-matrix(1:4, 2, 2)
y <-matrix(rep(10, 4), 2, 2)
x * y
class(as.Date("1970-01-02"))
as.Date("1970-01-01")
library(dplyr)
library(stats)
objects()
class(6)
x <-0:6
as.logical(x)
assign("x", c(10.4, 5.6, 3.1, 6.4, 21.7))
x
c(10.4, 5.6, 3.1, 6.4, 21.7)-> x
sqrt(-17)
x <-list(foo =1:4, bar =0.6)
x[[1]]
x[1]
x <-list(foo =1:4, bar =0.6, baz ="hello")
name <-"foo"
x$name
x[[name]]
x <-list(a =list(10, 12, 14), b =c(3.14, 2.81))
x[[c(1, 3)]]
x <-list(aardvark =1:5)
x[["a", exact = FALSE]]
date()
y <-"meat"
switch(y, fruit ="banana", vegetable ="broccoli")
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
y <-"broccoli"
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
y <-"banana"
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
switch(y, fruit ="banana", vegetable ="broccoli")
x <-3
switch(x, 2+2, mean(1:10), rnorm(5))
x <-2
switch(x, 2+2, mean(1:10), rnorm(5))
x <-3
switch(6, 2+2, mean(1:10), rnorm(5))
y <-"fruit"
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
x <-matrix(1:4, 2, 2)
y <-matrix(rep(10, 4), 2, 2)
x * y
library(readxl)
Energy_Indicators <- read_excel("C:/Users/Elias/Desktop/coursera/data science specialiation with python/week 3/Energy Indicators.xls",
sheet = "Energy", na = "...", skip = 17, n_max=227)
View(Energy_Indicators)
library(readxl)
Energy_Indicators <- read_excel("C:/Users/Elias/Desktop/coursera/data science specialiation with python/week 3/Energy Indicators.xls",
sheet = "Energy", na = "...", skip = 17)
View(Energy_Indicators)
Energy<-Energy_Indicators[1:227,]
str(Energy)
Energy$``
Energy[,1]
Energy<-Energy[,-(1)]
Energy
library(plyr)
rename(Energy, Country=)
rename(Energy, 'Country'='')
Energy<-rename(Energy, Country=)
Energy<-rename(Energy, Country=Energy$``)
Energy<-rename(Energy, Country=Energy[,1])
Energy<-rename(Energy, Country='NA')
Energy<-rename(Energy, Country='')
Energy<-rename(Energy, Country=col.names=NA)
str(Energy)
Energy<-rename(Energy, Country= )
Energy<-rename(Energy, Country=NA )
Energy<-rename(Energy, Country='[EMPTY]' )
Energy<-rename(Energy, Country='[EMPTY]')
Energy<-rename(Energy, Country='')
Energy<-rename(Energy, Country=Energy$``)
Energy<-rename(Energy, Country=names(Energy)[1])
Energy<-rename(Energy, Country=1)
Energy<-rename(Energy, Country=1, everything())
select(Energy, Country=1, everything())
library(dplyr)
Energy<-rename(Energy, Country=1, everything())
Energy<-rename(Energy, Country=Energy$``)
Energy<-rename(Energy, Country=1, everything())
Energy<-rename(Energy, Country=names(Energy)[1])
Energy<-rename(Energy, 'Country'=names(Energy)[1])
Energy<-rename(Energy, Country=Energy$``)
colnames(Energy)[1]<-'Country'
str(Energy)
City_Zhvi_AllHomes <- read.csv("C:/Users/Elias/Desktop/coursera/data science specialiation with python/week 4/City_Zhvi_AllHomes.csv")
View(City_Zhvi_AllHomes)
getOption("repos")
update.packages()
y
install.packages("rmarkdown")
install.packages("rmarkdown")
update.packages()
update.packages()
install.packages("rmarkdown")
update.packages()
install.packages("rmarkdown")
install.packages("rmarkdown", repos="https://cloud.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
packageVersion("yaml")
install.packages("yaml_2.1.14.tar.gz", repos = NULL)
git branch
StormData<-fread("C:\\Users\\Elias\\Desktop\\ReproducibleWeek4\\StormData.csv")
library(data.table)
StormData<-fread("C:\\Users\\Elias\\Desktop\\ReproducibleWeek4\\StormData.csv")
str(StormData)
library(lubridate)
library(dplyr)
group<-StormData %>% mutate(BGN_DATE=mdy_hms(BGN_DATE))
table(year(group$BGN_DATE))
setwd("C:/Users/Elias/Desktop/weather")
setwd("C:/Users/Elias/Desktop")
weather<-read.csv("../weather/weather.csv")
setwd("C:/Users/Elias/Desktop/weather")
weather<-read.csv("../weather/weather.csv")
head(weather)
str(weather)
max(weather$Date)
table(weather$Date)
tail(weather, n=100)
library(lubridate)
year(weather)
year(weather$Date)
years(weather$Date)
table(year(weather$Date))
table(weather$Date)
head(weather, n=100)
order(weather$Date)
duplicated.data.frame(weather)
table(weather$Date)
weather[weather$Date=="2005-01-01",]
id_weather<-table(weather[weather$Date=="2005-01-01",])
table(id_weather$ID)
id_weather<-table(weather[weather$Date=="2005-01-01",])
head(id_weather)
id_weather<-weather[weather$Date=="2005-01-01",]
head(id_weather)
table(id_weather$ID)
str(weather)
leap_days<-weather[weather$Date=="2008-02-29" || weather$Date=="2012-02-29",]
leap_days
table(weather$Date=="2008-02-29" || weather$Date=="2012-02-29")
weather$Date=="2008-02-29" || weather$Date=="2012-02-29"
((weather$Date=="2008-02-29") || (weather$Date=="2012-02-29"))
((weather$Date=="2008-02-29"))
weather[weather$Date=="2008-02-29",]
weather[weather$Date=="2012-02-29",]
weather[any(weather$Date=="2012-02-29",weather$Date=="2008-02-29" ),]
leap_days<-weather[any(weather$Date=="2012-02-29",weather$Date=="2008-02-29" ),]
leap_days
not_leap_days<-weather[!any(weather$Date=="2012-02-29",weather$Date=="2008-02-29" ),]
nrow(not_leap_days)
not_leap_days
any(weather$Date=="2012-02-29",weather$Date=="2008-02-29" )
any(weather$Date=="2012-02-29",weather$Date=="2008-02-29" )
leap_days<-weather[any(weather$Date=="2012-02-29",weather$Date=="2008-02-29" ),]
leap_days
leap_days<-weather[weather$Date=="2012-02-29" | weather$Date=="2008-02-29" ,]
leap_days
nrow(leap_days)
not_leap_days<-weather[weather$Date!="2012-02-29" & weather$Date!="2008-02-29" ,]
nrow(not_leap_days)
83+165002
weather<-read.csv("../weather/weather.csv")
setwd("C:/Users/Elias/Desktop/weather/weather")
weather<-read.csv("../weather/weather/weather.csv")
weather<-read.csv("../weather/weather.csv")
str(not_leap_days)
sapply(not_leap_days$Date, 123, 'ABC'), is.Date)
is.Date("2005-01-02")
sapply(not_leap_days$Date, is.Date)
not_leap_days$Date<-sapply(not_leap_days$Date, ymd)
str(not_leap_days)
weather<-read.csv("../weather/weather.csv")
str(weather)
weather$Date<-sapply(weather$Date, as.character)
str(weather)
weather$Date<-sapply(weather$Date, ymd)
str(weather)
weather<-read.csv("../weather/weather.csv")
weather$Date[:10]
weather$Date[1:10]
str(weather)
weather$Date<-ymd(weather$Date)
str(weather)
weather$'year'<-year(weather$Date)
str(weather)
